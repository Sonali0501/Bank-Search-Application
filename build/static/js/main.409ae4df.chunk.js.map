{"version":3,"sources":["Data.js","components/BanksList/Dropdown.js","components/BanksList/Search.js","components/BanksList/Table.js","api/index.js","actionCreators/types.js","actionCreators/index.js","components/BanksList/index.js","components/Favourites/index.js","components/BankDetails/index.js","components/Header.js","App.js","reducers/index.js","index.js"],"names":["CITIES","PAGES","Dropdown","label","dataList","initialValue","onChange","className","style","display","width","e","target","value","map","item","index","selected","Search","onSearch","useState","search","setSearch","type","placeholder","Table","pagination","itemsPerPage","data","BankListData","useMemo","computedData","filter","bank","bank_name","toLowerCase","includes","branch","ifsc","options","sizePerPage","hideSizePerPage","hidePageListOnlyOnePage","columns","dataField","text","formatter","cell","row","rowIndex","extraData","to","keyField","paginationFactory","axios","create","baseURL","ADD_FAVOURITE","REMOVE_FAVOURITE","GET_DATA","SET_CITY","removeFavourite","payload","connect","state","banks","city","fetchData","dispatch","a","api","get","response","setCityState","props","setCity","isLoading","setIsLoading","useEffect","then","console","log","getData","favourites","length","ownProps","i","match","params","id","addFavourite","isFavourite","setIsFavourite","x","bank_id","address","onClick","Header","App","exact","path","render","component","BankList","Favourites","BankDetails","combineReducers","action","persistedState","serializedState","localStorage","getItem","JSON","parse","loadFromLocalStorage","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","subscribe","stringify","setItem","saveToLocalStorage","getState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.409ae4df.chunk.js","sourcesContent":["export const CITIES = ['MUMBAI','PUNE','SOLAPUR','BANGLORE','BEED'];\r\n\r\nexport const PAGES = [10,20,30,40,50];","import React from 'react';\r\n\r\nconst Dropdown = ({ label, dataList, initialValue, onChange }) => {\r\n    return (\r\n        <div className='dropdown'>\r\n            <label>{label}: </label>\r\n            <select className=\"form-control\" style={{ display:'initial', width:'max-content' }} onChange={(e) => onChange(e.target.value)}>\r\n                {dataList.map((item,index) => {\r\n                    return <option key={index} selected={initialValue === item ? true : false} value={item}>{item}</option>\r\n                })}\r\n                \r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dropdown;","import React, { useState } from \"react\";\r\n\r\nconst Search = ({ onSearch }) => {\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const onInputChange = value => {\r\n        setSearch(value);\r\n        onSearch(value);\r\n    };\r\n    return (\r\n        <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search\"\r\n            value={search}\r\n            onChange={e => onInputChange(e.target.value)}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Search;","import React, { useMemo } from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Table = ({pagination,itemsPerPage,search,data}) => {\r\n\r\n    const BankListData = useMemo(() => {\r\n      let computedData = data;\r\n\r\n      if (search) {\r\n          computedData = computedData.filter(\r\n              bank =>\r\n                  bank.bank_name.toLowerCase().includes(search.toLowerCase()) ||\r\n                  bank.branch.toLowerCase().includes(search.toLowerCase()) ||\r\n                  bank.ifsc.toLowerCase().includes(search.toLowerCase())\r\n          );\r\n      }\r\n\r\n      return computedData\r\n\r\n    }, [search, itemsPerPage]);\r\n\r\n\r\n    const options = {\r\n      // pageStartIndex: 0,\r\n      sizePerPage: itemsPerPage,\r\n      hideSizePerPage: true,\r\n      hidePageListOnlyOnePage: true\r\n    };\r\n    const columns = [\r\n      // {\r\n      //   dataField: 'No#',\r\n      //   text: 'No.',\r\n      //   Cell: row => (\r\n      //     <div>\r\n      //       <span title={ row.value }>{ row.value }</span>\r\n      //     </div>\r\n      //   )\r\n      // },\r\n      {\r\n        dataField: 'bank_id',\r\n        text: 'Bank ID'\r\n      },\r\n      {\r\n        dataField: 'bank_name',\r\n        text: 'Bank Name',\r\n        formatter: pagination ? (cell, row, rowIndex, extraData) => (\r\n          <div>\r\n            <Link to={`/banks/${row.ifsc}`}> {cell} </Link>\r\n          </div>\r\n        ) : ''\r\n      },\r\n      {\r\n        dataField: 'ifsc',\r\n        text: 'IFSC'\r\n      },\r\n      {\r\n        dataField: 'branch',\r\n        text: 'Branch'\r\n      }\r\n    ];\r\n\r\n    return (\r\n        <BootstrapTable\r\n          className='table'\r\n          keyField=\"ifsc\"\r\n          data={ BankListData }\r\n          columns={ columns }\r\n          pagination={ pagination ? paginationFactory(options) : null }\r\n        />\r\n        \r\n    );\r\n  }\r\n\r\nexport default Table;","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://vast-shore-74260.herokuapp.com'\r\n});","export const ADD_FAVOURITE = 'ADD_FAVOURITE';\r\nexport const REMOVE_FAVOURITE = 'REMOVE_FAVOURITE';\r\nexport const GET_DATA = 'GET_DATA';\r\nexport const SET_CITY = 'SET_CITY';\r\n","import api from '../api';\r\nimport { ADD_FAVOURITE, REMOVE_FAVOURITE, GET_DATA, SET_CITY } from './types';\r\n\r\nexport const fetchData = (city) => async dispatch => {\r\n    const response = await api.get(`/banks?city=${city}`);\r\n\r\n    dispatch({ type: GET_DATA, payload: response.data});\r\n}\r\n\r\nexport const addFavourite = (data) => {\r\n    return {\r\n        type: ADD_FAVOURITE,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const removeFavourite = (ifsc) => {\r\n    return {\r\n        type: REMOVE_FAVOURITE,\r\n        payload: ifsc\r\n    }\r\n}\r\n\r\nexport const setCityState = (city) => {\r\n    return {\r\n        type: SET_CITY,\r\n        payload : city\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {PAGES, CITIES} from '../../Data';\r\nimport Dropdown from './Dropdown';\r\nimport Search from './Search';\r\nimport Table from './Table';\r\nimport { fetchData, setCityState } from '../../actionCreators';\r\nimport { connect } from 'react-redux';\r\n\r\nconst BankList = (props) => {\r\n\r\n    const [city,setCity] = useState(props.city === '' ? CITIES[0] : props.city);\r\n    const [itemsPerPage,setItemsPerPage] = useState(PAGES[0]);\r\n    const [search,setSearch] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        const getData = async () => {\r\n            setIsLoading(true);\r\n            await props.fetchData(city)\r\n            .then(() => {\r\n                setIsLoading(false);\r\n                console.log(props.banks);\r\n            })\r\n              \r\n        }\r\n\r\n        getData();\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        props.setCityState(city);\r\n        const getData = async () => {\r\n            setIsLoading(true);\r\n            await props.fetchData(city)\r\n            .then(() => {\r\n                setIsLoading(false);\r\n                console.log(props.banks);\r\n            })\r\n                \r\n        }\r\n\r\n        getData();\r\n    },[city]);\r\n\r\n    return (\r\n        <div className=\"bank-list\">\r\n            <div className=\"sub-header\">\r\n                <Dropdown label='Choose City' initialValue={city} dataList={CITIES} onChange={e => setCity(e)} />\r\n                <Search onSearch={value => setSearch(value)} />\r\n                {/* <Dropdown label='Items per Page' dataList={PAGES} onChange={e => setItemsPerPage(e)} /> */}\r\n            </div>\r\n            {isLoading ? <div className=\"loader\">\r\n                          Loading... </div> \r\n                    : <Table itemsPerPage={itemsPerPage} pagination search={search} data={props.banks} />}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { banks: state.banks, city: state.city }\r\n}\r\n\r\nexport default connect(mapStateToProps,{fetchData, setCityState})(BankList);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { removeFavourite } from '../../actionCreators';\r\nimport Table from '../BanksList/Table';\r\n\r\nconst Favourites = (props) => {\r\n    return (\r\n        <div className='favourites'>\r\n            <h4 className='text-center'>Favourite Banks</h4>\r\n            {props.favourites.length === 0 ? <div className=\"no\">No Favourites Added</div>\r\n                : <Table data={props.favourites} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        favourites: state.favourites    \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{removeFavourite})(Favourites);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addFavourite, removeFavourite } from '../../actionCreators';\r\n\r\nconst BankDetails = (props) => {\r\n    \r\n    const [isFavourite, setIsFavourite] = useState()\r\n\r\n    useEffect(() => {\r\n        const x = props.favourites.filter(i => i.ifsc === props.match.params.id)\r\n        console.log(x)\r\n        if(x.length === 0){\r\n            setIsFavourite(false)\r\n        }\r\n        else{\r\n            setIsFavourite(true)\r\n        }\r\n    },[props.favourites])\r\n\r\n    console.log(props.bank,isFavourite);\r\n\r\n    return (\r\n        <div className=\"bank-details\">\r\n            <h4 className='text-center'>Bank Details</h4>\r\n            <div className=\"item\">\r\n                <p className=\"label\">Bank Name : </p>\r\n                <p className=\"data\">{props.bank[0].bank_name}</p>\r\n            </div>\r\n            <div className=\"item\">\r\n                <p className=\"label\">Bank ID : </p>\r\n                <p className=\"data\">{props.bank[0].bank_id}</p>\r\n            </div>\r\n            <div className=\"item\">\r\n                <p className=\"label\">Branch : </p>\r\n                <p className=\"data\">{props.bank[0].branch}</p>\r\n            </div>\r\n            <div className=\"item\">\r\n                <p className=\"label\">IFSC : </p>\r\n                <p className=\"data\">{props.bank[0].ifsc}</p>\r\n            </div>\r\n            <div className=\"item\">\r\n                <p className=\"label\">Address : </p>\r\n                <p className=\"data\">{props.bank[0].address}</p>\r\n            </div>\r\n            <button onClick={() => isFavourite ? props.removeFavourite(props.bank[0].ifsc) : props.addFavourite(props.bank[0])}>{isFavourite ? 'Remove from Favourites' :'Add To Favourite'}</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) => {\r\n    return { \r\n        bank: state.banks.filter(i => i.ifsc == ownProps.match.params.id),\r\n        favourites: state.favourites    \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{ addFavourite,removeFavourite })(BankDetails);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div id=\"header\">\r\n            <Link to='/banks'><h2>Banks Search App</h2></Link>\r\n            <Link to='/banks/favourites'><button>My Favourites</button></Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport './App.scss';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport BankList from './components/BanksList';\nimport Favourites from './components/Favourites';\nimport BankDetails from './components/BankDetails';\nimport Header from './components/Header';\n\nconst App = () => {\n  return (\n    <>\n    <BrowserRouter>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" render={() => (\n            <Redirect to=\"/banks\"/>\n        )}/>\n        <Route path=\"/banks\" component={BankList} exact />\n        <Route path=\"/banks/favourites\" component={Favourites} exact />\n        <Route path=\"/banks/:id\" component={BankDetails} exact />\n      </Switch>\n    </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { ADD_FAVOURITE, REMOVE_FAVOURITE, GET_DATA, SET_CITY } from '../actionCreators/types';\r\n\r\nconst getData = (state = [] , action) => {\r\n    switch(action.type) {\r\n        case GET_DATA:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nconst favourites = (state = [], action) => {\r\n    switch(action.type){\r\n        case ADD_FAVOURITE:\r\n            return [...state, action.payload]\r\n        case REMOVE_FAVOURITE:\r\n            return state.filter(i => i.ifsc !== action.payload)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst city = (state='', action) => {\r\n    switch(action.type){\r\n        case SET_CITY:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    banks: getData,\r\n    favourites: favourites,\r\n    city: city\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './reducers';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nfunction saveToLocalStorage(state) {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem('state',serializedState)\n  } catch(e) {\n    console.log(e)\n  }\n}\n\nfunction loadFromLocalStorage() {\n  try {\n    const serializedState = localStorage.getItem('state')\n    if (serializedState === null) return undefined\n    return JSON.parse(serializedState)\n  } catch(e) {\n    console.log(e)\n    return undefined\n  }\n}\n\nconst persistedState = loadFromLocalStorage()\n\nconst store=createStore(reducers,persistedState,composeWithDevTools(applyMiddleware(thunk)));\n\nstore.subscribe(() => saveToLocalStorage(store.getState()))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}